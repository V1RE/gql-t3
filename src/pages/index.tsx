import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { trpc } from "../utils/trpc";

const searchtypes = [
  "Home",
  "Content",
  "Tool",
  "Filter",
  "Category",
  "Phase",
  "Filter",
];

const Home: NextPage = () => {
  const [search, setSearch] = useState("");
  const { data } = trpc.prepr.search.useQuery(search);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex min-h-screen flex-col items-center justify-center p-4">
        <input
          className="w-full rounded border border-gray-300 p-2"
          placeholder="Search"
          onChange={({ currentTarget: { value } }) => setSearch(value)}
          value={search}
        />
        <div className="flex w-full items-center justify-center pt-6 text-2xl text-blue-500">
          {data?.ContentItems?.items?.map((item) => {
            if (!item?.__typename) return null;

            if (
              searchtypes.includes(item.__typename) &&
              "title" in item &&
              item.title
            ) {
              return <TechnologyCard name={item.title} key={item._id} />;
            }
          })}
        </div>
      </main>
    </>
  );
};

export default Home;

type TechnologyCardProps = {
  name: string;
};

const TechnologyCard = ({ name }: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center rounded border-2 border-gray-500 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
    </section>
  );
};
